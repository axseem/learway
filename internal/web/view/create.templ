package view

templ CreatePage() {
	@layout() {
		<script type="text/javascript">
			async function createRequest(body) {
				await fetch("/api/create", { method: "POST", body: JSON.stringify(body) }).then((r) => {
				    if (r.status >= 400 && r.status < 500) {
				        r.json().then((data) => alert(data.message));
				    } else if (r.status >= 200 && r.status < 300) {
				        r.json().then((data) => window.location.replace("/deck/" + data.ID));
				    }
				});
			}
		</script>
		<div class="flex flex-col items-center w-full px-4 py-8">
			<div class="w-full md:w-[736px] flex flex-col gap-8">
				<div
					x-data="{ title: '', cards: [] }"
					class="flex flex-col w-full gap-4"
				>
					<div class="flex flex-col gap-1">
						<label for="title">Title of the deck</label>
						<input @change="(e)=>title=e.target.value" :value="title" type="text" class="px-4 py-2 border rounded-lg"/>
					</div>
					<ul class="flex flex-col gap-4">
						<template x-for="(card, index) in cards">
							<li class="flex flex-col overflow-hidden border divide-y rounded-2xl">
								<input @change="(e)=>cards[index][0]=e.target.value" :value="card[0]" :name="'cards['+index+'][0]'" class="w-full p-4"/>
								<input @change="(e)=>cards[index][1]=e.target.value" :value="card[1]" :name="'cards['+index+'][1]'" class="w-full p-4 bg-neutral-50"/>
							</li>
						</template>
					</ul>
					<button @click="cards.push([])" class="p-4 rounded-full bg-neutral-100">+ Add card</button>
					<button
						@click="await createRequest($data)"
						class="p-4 rounded-full bg-neutral-100"
					>Create</button>
				</div>
			</div>
		</div>
	}
}

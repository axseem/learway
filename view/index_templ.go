// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.598
package view

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"github.com/axseem/learway/database"
)

func IndexPage(decks []database.Deck) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
			if !templ_7745c5c3_IsBuffer {
				templ_7745c5c3_Buffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"flex h-dvh\"><div class=\"flex flex-col p-4 place-content-between bg-neutral-50\"><div class=\"flex flex-col gap-4\"><div class=\"flex gap-2 p-2\"><img src=\"/assets/img/logo-dark.svg\" alt=\"rts\"><h1 class=\"text-3xl text-black font-[&#39;Geist_Mono&#39;]\">lerway</h1></div><input type=\"text\" placeholder=\"Search for knowledge\" class=\"px-4 py-2 border rounded-full\"><div class=\"flex flex-col\"><button class=\"flex px-4 py-2 rounded-full bg-neutral-200/50\">Recent</button> <button class=\"flex px-4 py-2 rounded-full hover:bg-neutral-100 text-neutral-500\">Popular</button> <button class=\"flex px-4 py-2 rounded-full hover:bg-neutral-100 text-neutral-500\">Recomended</button></div></div><button class=\"p-4 font-medium bg-white border rounded-full hover:bg-neutral-200/30\">+ new deck</button></div><div class=\"w-full\"><div class=\"grid grid-cols-1 gap-2 p-4 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 2xl:grid-cols-5\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			for _, deck := range decks {
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<a x-data=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString("{ cards: " + deck.Cards + " }"))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" href=\"./deck/1\" class=\"border border-neutral-200 rounded-xl aspect-[2/1] flex flex-col gap-2 p-4 hover:bg-neutral-50 transition\"><span>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var3 string
				templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(deck.Title)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `view/index.templ`, Line: 34, Col: 25}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</span><div class=\"flex gap-1\"><span x-text=\"cards.length + &#39; cards&#39;\" class=\"px-2 py-0.5 rounded-full text-neutral-500 bg-neutral-100\"></span> <span class=\"px-2 py-0.5 rounded-full text-neutral-500 bg-neutral-100\">4.2 âœ¦</span></div><div></div></a>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if !templ_7745c5c3_IsBuffer {
				_, templ_7745c5c3_Err = io.Copy(templ_7745c5c3_W, templ_7745c5c3_Buffer)
			}
			return templ_7745c5c3_Err
		})
		templ_7745c5c3_Err = layout().Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

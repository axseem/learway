// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.598
package view

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"github.com/axseem/learway/database"
)

func DeckPage(deck database.Deck) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
			if !templ_7745c5c3_IsBuffer {
				templ_7745c5c3_Buffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div x-data=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString("{ cards: " + deck.Cards + ", cardIndex: 0, fliped: false }"))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" class=\"flex flex-col items-center px-4 py-8\"><div class=\"w-full md:w-[736px] flex flex-col gap-16\"><div class=\"flex flex-col gap-4\"><a href=\"/\" class=\"text-2xl font-light font-[&#39;Geist_Mono&#39;] mb-4\">lerway</a><div><h1 class=\"text-3xl\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 string
			templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(deck.Title)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `view/deck.templ`, Line: 16, Col: 39}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</h1></div><button type=\"button\" x-on:click=\"fliped = !fliped\" :class=\"fliped ? &#39;ring-8&#39; : &#39;&#39; \" class=\"w-full aspect-[2/1] border ring-neutral-200 ring-inset border-neutral-200 hover:bg-neutral-50 text-xl rounded-3xl flex flex-col justify-center items-center active:scale-95 transition-transform\"><span x-text=\"cards[cardIndex][Number(fliped)]\"></span></button><div class=\"flex justify-center w-full overflow-hidden border rounded-full\"><button type=\"button\" x-on:click=\"fliped = false;cardIndex = (cardIndex + cards.length-1) % cards.length\" class=\"w-full transition border-r hover:bg-neutral-50 active:bg-neutral-100 active:-translate-x-4\">&lt;</button><div class=\"flex items-center justify-center w-full py-4 font-[&#39;Geist_Mono&#39;]\"><span x-text=\"cardIndex+1\"></span> <span>/</span> <span x-text=\"cards.length\"></span></div><button type=\"button\" x-on:click=\"fliped = false; cardIndex = (cardIndex + 1) % cards.length\" class=\"w-full transition border-l hover:bg-neutral-50 active:bg-neutral-100 active:translate-x-4\">&gt;</button></div></div><ul class=\"flex flex-col gap-4\"><template x-for=\"(card, index) in cards\"><li class=\"flex flex-col overflow-hidden border divide-y rounded-2xl\"><span x-text=\"card[0]\" class=\"w-full p-4\"></span> <span x-text=\"card[1]\" class=\"w-full p-4 bg-neutral-50\"></span></li></template></ul></div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if !templ_7745c5c3_IsBuffer {
				_, templ_7745c5c3_Err = io.Copy(templ_7745c5c3_W, templ_7745c5c3_Buffer)
			}
			return templ_7745c5c3_Err
		})
		templ_7745c5c3_Err = layout().Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
